/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.itq.formularios;

import com.itq.modelo.ClienteModel;
import com.itq.modelo.ProductoCantidadModel;
import com.itq.modelo.ProductoModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 *
 */
public class JfrFacturacion extends javax.swing.JFrame {
    
    private List<ProductoCantidadModel> productosSeleccionados;
    /**
     * Creates new form JfrFacturacion
     */
    public JfrFacturacion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnCliente = new javax.swing.JPanel();
        jlbCliente = new javax.swing.JLabel();
        jtxClienteNombre = new javax.swing.JTextField();
        jtxClienteApellido = new javax.swing.JTextField();
        jlbClienteNombre = new javax.swing.JLabel();
        jlbClienteApellido = new javax.swing.JLabel();
        jlbClienteCedula = new javax.swing.JLabel();
        jtxClienteCedula = new javax.swing.JTextField();
        jlbDireccion = new javax.swing.JLabel();
        jtxClienteDireccion = new javax.swing.JTextField();
        jbtClienteSeleccionar = new javax.swing.JButton();
        jpnProductos = new javax.swing.JPanel();
        jlbProductos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbProductos = new javax.swing.JTable();
        jbtProductoSeleccionar = new javax.swing.JButton();
        jbtProductoQuitar = new javax.swing.JButton();
        jpnFacturacion = new javax.swing.JPanel();
        jlbTotal = new javax.swing.JLabel();
        jtxTotal = new javax.swing.JTextField();
        jbtFacturar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpnCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlbCliente.setText("Cliente");

        jtxClienteNombre.setEditable(false);

        jtxClienteApellido.setEditable(false);

        jlbClienteNombre.setText("Nombre:");

        jlbClienteApellido.setText("Apellido:");

        jlbClienteCedula.setText("Cedula:");

        jtxClienteCedula.setEditable(false);

        jlbDireccion.setText("Direccion");

        jtxClienteDireccion.setEditable(false);

        jbtClienteSeleccionar.setText("Seleccionar");
        jbtClienteSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClienteSeleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnClienteLayout = new javax.swing.GroupLayout(jpnCliente);
        jpnCliente.setLayout(jpnClienteLayout);
        jpnClienteLayout.setHorizontalGroup(
            jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnClienteLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbCliente)
                    .addGroup(jpnClienteLayout.createSequentialGroup()
                        .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnClienteLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jlbClienteNombre))
                            .addComponent(jlbClienteCedula, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxClienteCedula, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jtxClienteNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlbClienteApellido)
                            .addComponent(jlbDireccion))
                        .addGap(18, 18, 18)
                        .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnClienteLayout.createSequentialGroup()
                                .addComponent(jtxClienteApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jbtClienteSeleccionar))
                            .addComponent(jtxClienteDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnClienteLayout.setVerticalGroup(
            jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxClienteNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxClienteApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbClienteNombre)
                    .addComponent(jlbClienteApellido)
                    .addComponent(jbtClienteSeleccionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbClienteCedula)
                    .addComponent(jtxClienteCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbDireccion)
                    .addComponent(jtxClienteDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jpnProductos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlbProductos.setText("Productos a facturar:");

        jtbProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Cantidad", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtbProductos);

        jbtProductoSeleccionar.setText("Seleccionar");
        jbtProductoSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProductoSeleccionarActionPerformed(evt);
            }
        });

        jbtProductoQuitar.setText("Quitar");
        jbtProductoQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProductoQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnProductosLayout = new javax.swing.GroupLayout(jpnProductos);
        jpnProductos.setLayout(jpnProductosLayout);
        jpnProductosLayout.setHorizontalGroup(
            jpnProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtProductoQuitar)
                    .addGroup(jpnProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnProductosLayout.createSequentialGroup()
                            .addComponent(jlbProductos)
                            .addGap(307, 307, 307)
                            .addComponent(jbtProductoSeleccionar))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnProductosLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jpnProductosLayout.setVerticalGroup(
            jpnProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbProductos)
                    .addComponent(jbtProductoSeleccionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtProductoQuitar)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jpnFacturacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlbTotal.setText("Total:");

        jtxTotal.setEditable(false);
        jtxTotal.setText("00.00");

        jbtFacturar.setText("Facturar");

        javax.swing.GroupLayout jpnFacturacionLayout = new javax.swing.GroupLayout(jpnFacturacion);
        jpnFacturacion.setLayout(jpnFacturacionLayout);
        jpnFacturacionLayout.setHorizontalGroup(
            jpnFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnFacturacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtFacturar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                .addComponent(jlbTotal)
                .addGap(18, 18, 18)
                .addComponent(jtxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );
        jpnFacturacionLayout.setVerticalGroup(
            jpnFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFacturacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbTotal)
                    .addComponent(jtxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtFacturar))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpnFacturacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpnProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnFacturacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtClienteSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClienteSeleccionarActionPerformed
        JfrSelectorCliente selector = new JfrSelectorCliente();
        selector.setFormularioFacturacion(this);
        selector.cargar();
        selector.setVisible(true);
    }//GEN-LAST:event_jbtClienteSeleccionarActionPerformed

    private void jbtProductoSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProductoSeleccionarActionPerformed
        JfrSelectorProducto selectorProducto = new JfrSelectorProducto();
        selectorProducto.setFormularioFacturacion(this);
        selectorProducto.cargar();
        selectorProducto.setVisible(true);
    }//GEN-LAST:event_jbtProductoSeleccionarActionPerformed

    private void jbtProductoQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProductoQuitarActionPerformed
        
        int rowSeleccionado = jtbProductos.getSelectedRow();        
         if(rowSeleccionado<0){
            JOptionPane.showMessageDialog(this, "Seleccione un elemento de la tabla");
            return;
        }
         
        DefaultTableModel modeloTabla = (DefaultTableModel) jtbProductos.getModel();
        String codigoBarras =  (String) modeloTabla.getValueAt(rowSeleccionado, 0);
        
        quitarProducto(codigoBarras);
        
        modeloTabla.setRowCount(0);
        
        for(ProductoCantidadModel prod : productosSeleccionados){
            Object[] row = new Object[5];
            row[0] = prod.getCodigoBarras();
            row[1] = prod.getNombre();
            double precio = prod.getPrecio();
            String strPrecio = String.valueOf(precio);
            int prodCantidad = prod.getCantidad();
            String strCantidad = String.valueOf(prodCantidad);
            row[2] = strCantidad;
            row[3] = strPrecio;
            double calculado = precio * prodCantidad;
            row[4] = String.valueOf(calculado);
            modeloTabla.addRow(row);
        }
        
        actualizarGranTotal();
    }//GEN-LAST:event_jbtProductoQuitarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfrFacturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfrFacturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfrFacturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfrFacturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfrFacturacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtClienteSeleccionar;
    private javax.swing.JButton jbtFacturar;
    private javax.swing.JButton jbtProductoQuitar;
    private javax.swing.JButton jbtProductoSeleccionar;
    private javax.swing.JLabel jlbCliente;
    private javax.swing.JLabel jlbClienteApellido;
    private javax.swing.JLabel jlbClienteCedula;
    private javax.swing.JLabel jlbClienteNombre;
    private javax.swing.JLabel jlbDireccion;
    private javax.swing.JLabel jlbProductos;
    private javax.swing.JLabel jlbTotal;
    private javax.swing.JPanel jpnCliente;
    private javax.swing.JPanel jpnFacturacion;
    private javax.swing.JPanel jpnProductos;
    private javax.swing.JTable jtbProductos;
    private javax.swing.JTextField jtxClienteApellido;
    private javax.swing.JTextField jtxClienteCedula;
    private javax.swing.JTextField jtxClienteDireccion;
    private javax.swing.JTextField jtxClienteNombre;
    private javax.swing.JTextField jtxTotal;
    // End of variables declaration//GEN-END:variables
    
    public void seleccionarCliente(ClienteModel cliente){
        jtxClienteNombre.setText(cliente.getNombre());
        jtxClienteApellido.setText(cliente.getApellido());
        jtxClienteCedula.setText(cliente.getCedula());
        jtxClienteDireccion.setText(cliente.getDireccion());
    }
    
    public void anadirProducto(ProductoModel producto, int cantidad){
        if(productosSeleccionados == null){
            productosSeleccionados = new ArrayList<>();
        }
        if(productoEstaAnadido(producto)==true){
            JOptionPane.showMessageDialog(this, "El producto ya esta añadido");
            return;
        }
        ProductoCantidadModel productoCantidad = new ProductoCantidadModel(
                producto.getCodigoBarras(),
                producto.getNombre(),
                cantidad,
                producto.getPrecio()
        );
        
        productosSeleccionados.add(productoCantidad);
        DefaultTableModel modeloTabla = (DefaultTableModel) jtbProductos.getModel();
        
        modeloTabla.setRowCount(0);
        
        for(ProductoCantidadModel prod: productosSeleccionados){
            Object[] row = new Object[5];
            row[0] = prod.getCodigoBarras();
            row[1] = prod.getNombre();
            double precio = prod.getPrecio();
            String strPrecio = String.valueOf(precio);
            int prodCantidad = prod.getCantidad();
            String strCantidad = String.valueOf(prodCantidad);
            row[2] = strCantidad;
            row[3] = strPrecio;
            double calculado = precio * prodCantidad;
            row[4] = String.valueOf(calculado);
            modeloTabla.addRow(row);
        }
        
        actualizarGranTotal();
    }
    
    private boolean productoEstaAnadido(ProductoModel producto){
        for(ProductoModel prod: productosSeleccionados){
            if(prod.getCodigoBarras().equals(producto.getCodigoBarras())){
                return true;
            }
        }
        return false;
    }
    
    private void actualizarGranTotal(){
        double acumulador=0.0;
        for(ProductoCantidadModel prod: productosSeleccionados){
            double calculado = prod.getCantidad() * prod.getPrecio();
            acumulador = acumulador + calculado;
        }
        String total = String.valueOf(acumulador);
        jtxTotal.setText(total);
    }
    
    private void quitarProducto(String codidoBarras){
        List<ProductoCantidadModel> nuevaLista = new ArrayList<>();
        for(ProductoCantidadModel prod: productosSeleccionados){
            if(prod.getCodigoBarras().equals(codidoBarras)==false){
                nuevaLista.add(prod);
            }
        }
        productosSeleccionados = nuevaLista;
    }
    
}
